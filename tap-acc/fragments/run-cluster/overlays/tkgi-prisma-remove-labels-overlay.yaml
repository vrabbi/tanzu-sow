apiVersion: v1
kind: Secret
metadata:
  name: tkgi-prisma-remove-labels-overlay
  namespace: tap-install
  annotations:
    package-to-overlay: "ootb-templates"
type: Opaque
stringData:
  tkgi-prisma-remove-labels-overlay.yaml: |
    #@ load("@ytt:overlay","overlay")
    #@ def scan_template_matcher():
    apiVersion: carto.run/v1alpha1
    kind: ClusterSourceTemplate
    metadata:
      name: source-scanner-template
    #@ end
    #@overlay/match by=overlay.subset(scan_template_matcher())
    ---
    spec:
      ytt: |
        #@ load("@ytt:data", "data")
        #@ load("@ytt:overlay", "overlay")
        #@ def merge_labels(fixed_values):
        #@   labels = {}
        #@   if hasattr(data.values.workload.metadata, "labels"):
        #@     labels.update(data.values.workload.metadata.labels)
        #@   end
        #@   labels.update(fixed_values)
        #@   return labels
        #@ end
    
        #@ def bad_labels():
        #@ if/end hasattr(data.values.workload.metadata.labels, "apps.tanzu.vmware.com/has-tests"):
        #@overlay/remove
        apps.tanzu.vmware.com/has-tests: "true"
        #@ if/end hasattr(data.values.workload.metadata.labels, "apps.tanzu.vmware.com/auto-configure-actuators"):
        #@overlay/remove missing_ok=True
        apps.tanzu.vmware.com/auto-configure-actuators: "true"
        #@ end
        ---
        apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
        kind: SourceScan
        metadata:
          name: #@ data.values.workload.metadata.name
          labels: #@ overlay.apply(merge_labels({ "app.kubernetes.io/component": "source-scan" }),bad_labels())
        spec:
          blob:
            url: #@ data.values.source.url
            revision: #@ data.values.source.revision
          scanTemplate: #@ data.values.params.scanning_source_template
          #@ if data.values.params.scanning_source_policy != None and len(data.values.params.scanning_source_policy) > 0:
          scanPolicy: #@ data.values.params.scanning_source_policy
          #@ end